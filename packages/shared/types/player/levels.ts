const getExperienceForLevelUpSteps = (): number[] => {
  const maxLevel = 100;
  const firstLevelExp = 50;

  const steps: number[] = [firstLevelExp];
  for (let i = 1; i <= maxLevel; i++) {
    const prevLevelExp = steps[i - 1];
    const scaleFactor = (maxLevel - i - 1) / maxLevel;
    steps.push(Math.floor(prevLevelExp + prevLevelExp * scaleFactor));
  }

  return steps;
}; //TODO: i need to find better way for it

export const getExperienceNeededForLevels = (
  currentLevel: number
): { next: number; current: number } => ({
  next: experienceNeededForLevel[currentLevel - 1],
  current: experienceNeededForLevel[currentLevel - 2] ?? 0,
});

const experienceNeededForLevel = [
  50, 99, 195, 382, 744, 1443, 2784, 5345, 10208, 19395, 36656, 68913, 128867,
  239692, 443430, 815911, 1493117, 2717472, 4918624, 8853523, 15847806,
  28209094, 49930096, 87876968, 153784694, 267585367, 462922684, 796227016,
  1361548197, 2314631934, 3911727968, 6571702986, 10974743986, 18218075016,
  30059823776, 49298110992, 80355920916, 130176591883, 209584312931,
  335334900689, 533182492095, 842428337510, 1322612489890, 2063275484228,
  3198077000553, 4925038580851, 7535309028702, 11453669723627, 17295041282676,
  25942561924014, 38654417266780, 57208537554834, 84096550205605,
  122780963300183, 178032396785265, 256366651370781, 366604311460216,
  520578122273506, 734015152405643, 1027621213367900, 1428393486581381,
  1971183011482305, 2700520725730758, 3672708186993831, 4958156052441672,
  6643929110271840, 8836425716661547, 11664081945993242, 15279947349251148,
  19863931554026492, 25624471704694176, 32799323782008544, 41655141203150850,
  52485477915970060, 65606847394962580, 81352490769753600, 100063563646796930,
  122077547649092260, 147713832655401630, 177256599186481950,
  210935353031913540, 248903716577658000, 291217348395859840,
  337812124139197440, 388483942760077060, 442871694746487900,
  500445015063531260, 560498416871155000, 622153242726982000,
  684368566999680300, 745961738029651500, 805638677072023600,
  862033384467065200, 913755387535089200, 959443156911843600,
  997820883188317300, 1027755509683966800, 1048310619877646200,
  1058793726076422700, 1058793726076422700, 1048205788815658400,
];
